{"version":3,"sources":["Components/Carditem.js","Firebaseconfig.js","Contexts/Autcontext.js","Components/Moviemodal.js","Components/Search.js","Components/Navbar.js","Components/Movie.js","Components/Signup.js","Components/Signin.js","Components/MovieFirestore.js","Components/Favorites.js","App.js","reportWebVitals.js","index.js"],"names":["styles","makeStyles","cardcontent","backgroundColor","display","flexDirection","cardimg","height","width","objectFit","title","color","alignSelf","Carditem","props","movieVote","classes","Card","className","card","CardActionArea","CardMedia","component","alt","image","imgUrl","CardContent","Typography","movieTitle","id","movieRating","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","Authcontext","React","createContext","useAuth","useContext","Authprovider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","password","createUserWithEmailAndPassword","then","cred","firestore","collection","doc","uid","set","catch","err","console","log","signIn","signInWithEmailAndPassword","signOut","Provider","Moviemodal","rating","currentMovie","setSelectedMovie","motion","div","initial","opacity","animate","onClick","e","target","classList","contains","img","src","backdrop_path","add","poster_path","vote_average","overview","Search","voteMovie","searchMovie","setSearchMovie","setRating","ratingMovie","setRatingMovie","selectedMovie","formHandler","a","preventDefault","fetch","data","json","movies","results","filter","item","parseInt","push","textfield","backgroundClip","margin","textTransform","typo","justifyContent","alignItems","submitBtn","style","variant","flexWrap","onSubmit","required","onChange","toLowerCase","label","placeholder","padding","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","Button","type","Container","Grid","container","spacing","length","map","xs","sm","lg","fontSize","customStyles","btn","appbar","toolbar","maindiv","links","textDecoration","home","Navbar","flag","btnHandler","AppBar","position","Toolbar","to","window","confirm","Movie","setMovies","getMoviesData","allMovies","marginTop","maxHeight","minWidth","minHeight","maxWidth","main","top","left","background","bottom","right","gridContainer","classname","gridItem","toast","configure","form","Signup","route","useHistory","emailRef","useRef","passwordRef","cnfPasswordRef","setError","formSubmitHandler","current","error","POSITION","BOTTOM_CENTER","autoClose","success","inputRef","Signin","routeHistory","MovieFirestore","favorites","setFavorites","onSnapshot","snap","documents","forEach","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66d25fcd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles({\n  cardcontent: {\n    backgroundColor: \"#818CF8\",\n    display: \"flex\",\n    flexDirection:'column',\n  },\n  cardimg: {\n    height:'400px',\n    width:'100%',\n    objectFit: \"cover\",\n  },\n  title: {\n    color: \"black\",\n    alignSelf:'flex-start'\n  },\n});\n\nconst setColor = (movieVote) => {\n  // console.log(movieVote);\n  if (movieVote > 7) return \"green\";\n  else if (movieVote > 5 && movieVote < 7) return \"yellow\";\n  else return \"red\";\n};\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\n\nexport default function Carditem(props) {\n  const classes = styles();\n  return (\n    <>\n      {/* {console.log(movies)} */}\n      <Card className={classes.card}>\n        <CardActionArea>\n          <div className=\"imagediv\">\n            <CardMedia\n              className={classes.cardimg}\n              component=\"img\"\n              height=\"350\"\n              alt=\"not render\"\n              image={\n                props.imgUrl\n                  ? imagepath + props.imgUrl\n                  : \"https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              }\n            />\n          </div>\n          <CardContent className={classes.cardcontent}>\n            <Typography className={classes.title}>\n              {props.movieTitle}\n            </Typography>\n            <Typography id=\"rating\" className={setColor(props.movieRating)}>\n              {props.movieRating}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        {/* {console.log(setColor(props.movieRating))}; */}\n      </Card>\n    </>\n  );\n}\n","import firebase from \"firebase\";\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyCiRnK6knWhXbE88DIYmSnthIX-K62c-k8\",\n  authDomain: \"moviedeck-fc661.firebaseapp.com\",\n  projectId: \"moviedeck-fc661\",\n  storageBucket: \"moviedeck-fc661.appspot.com\",\n  messagingSenderId: \"224418985330\",\n  appId: \"1:224418985330:web:8e840efd4828b9bee599eb\",\n});\nexport const auth=app.auth();\nexport default app;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../Firebaseconfig\";\nimport firebase from \"firebase\";\n// import {firestoreRef} from '../Firebaseconfig';\n\nexport const Authcontext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(Authcontext);\n};\nconst Authprovider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  function signUp(email, password) {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((cred) => {\n        return firebase.firestore().collection(\"users\").doc(cred.user.uid).set({\n            \n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function signIn(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function signOut() {\n    return auth.signOut();\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signUp,\n    signIn,\n    signOut,\n  };\n  return (\n    <Authcontext.Provider value={value}>\n      {!loading && children}\n    </Authcontext.Provider>\n  );\n};\n\nexport default Authprovider;\n","import React, { useState } from \"react\";\nimport { useAuth } from \"../Contexts/Autcontext\";\nimport { motion } from \"framer-motion\";\nimport firebase from \"firebase\";\n\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\n\nexport default function Moviemodal({ currentMovie, setSelectedMovie }) {\n  // const [flag,setFlag]=useState(false);\n  // const resetFlag = () => {\n  //     currentMovie=null;\n  //     setFlag(false);\n\n  const { currentUser } = useAuth();\n\n  const modalHandler = (e) => {\n    if (e.target.classList.contains(\"main-modal\")) setSelectedMovie(null);\n  };\n\n  const setColor = (rating) => {\n    if (rating >= 7) return \"green\";\n    else if (rating < 7 && rating > 4) return \"yellow\";\n    else return \"red\";\n  };\n\n  const addToFavorites = () => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .collection(\"movies\")\n      .add({\n        title: currentMovie.title,\n        image: currentMovie.poster_path,\n        rating: currentMovie.vote_average,\n      });\n  };\n\n  return (\n    // <>{console.log(currentMovie)}</>\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      onClick={modalHandler}\n      className=\"main-modal\"\n      //   initial={{ opacity: 0 }}\n      //   animate={{ opacity: 1 }}\n    >\n      <div className=\"sub-modal\">\n        <motion.img\n          // initial={{ y: \"-10vh\" }}\n          // animate={{ y: \"0\" }}\n          src={\n            currentMovie.backdrop_path\n              ? imagepath + currentMovie.backdrop_path\n              : \"https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n          }\n          alt=\"not render\"\n          // initial={{ y: \"-10vh\" }}\n          // animate={{ y: \"0\" }}\n        />\n        <div className=\"modal-overview\">\n          {currentUser && <button onClick={addToFavorites}>Add</button>}\n          <h3>Overview</h3>\n          <p className=\"over-para\">{currentMovie.overview}</p>\n          <h3>Rating</h3>\n          <p className={setColor(currentMovie.vote_average)}>\n            {currentMovie.vote_average}\n          </p>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Textfield from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Carditem from \"./Carditem\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { Container } from \"@material-ui/core\";\nimport Moviemodal from \"./Moviemodal\";\n\nconst search_api =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nexport default function Search() {\n  let voteMovie = [];\n  let [flag, setFlag] = useState(true);\n  const [searchMovie, setSearchMovie] = useState();\n  // let [movies, setMovies] = useState([]);\n  let [rating, setRating] = useState(0);\n  let [ratingMovie, setRatingMovie] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const formHandler = async (e) => {\n    setRatingMovie(\"\");\n    e.preventDefault();\n    console.log(\"formhandler\");\n    await fetch(search_api + searchMovie)\n      .then((data) => data.json())\n      .then((movies) => {\n        console.log(rating);\n        console.log(movies.results);\n        // // setMovies(movies.results);\n        // setRatingMovie(movies.results);\n        movies.results.filter((item) => {\n          if (item.vote_average <= parseInt(rating)) voteMovie.push(item);\n          setRatingMovie(voteMovie);\n        });\n      });\n    console.log(rating);\n    console.log(ratingMovie);\n    setSearchMovie(\"\");\n    setRating(\"\");\n  };\n  const styles = makeStyles({\n    textfield: {\n      width: \"24rem\",\n      backgroundClip: \"#C4B5FD\",\n      margin: \"1rem\",\n      textTransform: \"uppercase\",\n    },\n    typo: {\n      margin: \"1rem\",\n      width: \"100%\",\n      //   padding: \"0.4rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    submitBtn: {\n      alignSelf: \"center\",\n    },\n  });\n\n  const classes = styles();\n  const selectMovie = (currentMovie) => {\n    setSelectedMovie(currentMovie);\n    // setFlag(true);\n  };\n\n  const setVote = (e) => {\n    rating = e.target.value;\n    setRating(rating);\n  };\n  // const resetFlag = () => {\n  //   setSelectedMovie(null);\n  //   // setFlag(false);\n  // };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: \"5rem auto\",\n      }}\n    >\n      <Typography variant=\"h4\" className={classes.typo} color=\"primary\">\n        Search movies\n      </Typography>\n      <form\n        style={{ display: \"flex\", justifyContent: \"center\", flexWrap: \"wrap\" }}\n        onSubmit={formHandler}\n      >\n        <Textfield\n          required\n          value={searchMovie}\n          color=\"primary\"\n          className={classes.textfield}\n          onChange={(e) => setSearchMovie(e.target.value.toLowerCase())}\n          label=\"Search\"\n          placeholder=\"Search movies...\"\n          variant=\"filled\"\n        />\n        <div style={{ alignSelf: \"center\", padding: \"1rem\" }}>\n          <FormLabel>Rating</FormLabel>\n          <RadioGroup\n            aria-label=\"gender\"\n            name=\"gender1\"\n            value={rating}\n            onChange={setVote}\n          >\n            <FormControlLabel\n              value=\"8\"\n              control={<Radio required />}\n              label=\"<5\"\n            />\n            {/* <FormControlLabel value=\"5\" control={<Radio />} label=\">5\" /> */}\n          </RadioGroup>\n        </div>\n        <Button type=\"submit\" className={classes.submitBtn} variant=\"outlined\">\n          Search\n        </Button>\n      </form>\n\n      <Container>\n        <Grid container spacing={4}>\n          {ratingMovie.length != 0 ? (\n            ratingMovie.map((item) => {\n              return (\n                <Grid\n                  xs={6}\n                  key={item.id}\n                  sm={4}\n                  lg={3}\n                  onClick={() => selectMovie(item)}\n                  item\n                >\n                  <Carditem\n                    imgUrl={item.poster_path}\n                    movieTitle={item.title}\n                    movieRating={item.vote_average}\n                  />\n                </Grid>\n              );\n            })\n          ) : (\n            <div style={{width:'100%',margin:'3rem',fontSize:'1.5rem',color:'red', display:'flex',justifyContent:'center'}}>No movies found</div>\n          )}\n          <div>\n            {selectedMovie && (\n              <Moviemodal\n                currentMovie={selectedMovie}\n                setSelectedMovie={setSelectedMovie}\n              />\n            )}\n          </div>\n          {/* {flag ? (\n            movies.map((item) => {\n              return (\n                <Grid xs={6} key={item.id} sm={4} lg={3} item>\n                  <Carditem\n                    imgUrl={item.poster_path}\n                    movieTitle={item.title}\n                    movieRating={item.vote_average}\n                  />\n                </Grid>\n              );\n            })\n          ) : (\n            <Typography\n              color=\"secondary\"\n              className={classes.typo}\n              variant=\"body1\"\n            >\n              No movies found yet\n            </Typography>\n          )} */}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Search from \"./Search\";\nimport { NavLink } from \"react-router-dom\";\nimport { useAuth } from \"../Contexts/Autcontext\";\n\nconst customStyles = makeStyles({\n  btn: {\n    margin: \"1rem\",\n    backgroundColor: \"white\",\n    \"&:hover\": {\n      backgroundColor: \"#ECFDF5\",\n    },\n  },\n  appbar: {\n    backgroundColor: \"#8B5CF6\",\n  },\n  toolbar: {\n    height: \"3rem\",\n  },\n  typo: {\n    color: \"black\",\n  },\n  maindiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  links: {\n    color: \"black\",\n    fontSize: \"1.5rem\",\n    textDecoration: \"none\",\n    padding: \"1rem\",\n  },\n  home: {\n    textDecoration: \"none\",\n    color: \"black\",\n  },\n});\nexport default function Navbar() {\n  let flag = false;\n\n  const { signOut, currentUser } = useAuth();\n  useEffect(() => {\n    btnHandler();\n  }, []);\n  const btnHandler = () => {\n    flag = true;\n    // console.log(flag);\n  };\n  const classes = customStyles();\n\n  const logoutUser = () => {\n    const _isLogout = window.confirm(`Logout user ${currentUser.email}?`);\n    if (_isLogout) signOut();\n  };\n  return (\n    <>\n      {!flag ? (\n        <AppBar className={classes.appbar} position=\"fixed\">\n          <Toolbar className={classes.toolbar}>\n            <Typography className={classes.typo} variant=\"h5\" color=\"secondary\">\n              <NavLink to=\"/\" className={classes.home}>\n                moviesDeck\n              </NavLink>\n            </Typography>\n            <div className={classes.maindiv}>\n              {/* <Typography variant=\"h5\" color=\"primary\">\n                {currentUser.email}\n              </Typography> */}\n              <NavLink className={classes.links} to=\"/Search\">\n                {/* <Button\n                  onClick={btnHandler}\n                  className={classes.btn}\n                  variant=\"contained\"\n                > */}\n                Search\n                {/* </Button> */}\n              </NavLink>\n              {!currentUser ? (\n                <NavLink className={classes.links} to=\"/Signup\">\n                  {/* <Button className={classes.btn} variant=\"contained\"> */}\n                  Sign up\n                  {/* </Button> */}\n                </NavLink>\n              ) : (\n                <NavLink className={classes.links} to=\"/Favorites\">\n                  Watchlists\n                </NavLink>\n              )}\n              {!currentUser ? (\n                <NavLink className={classes.links} to=\"/Signin\">\n                  {/* <Button className={classes.btn} variant=\"contained\"> */}\n                  Sign in\n                  {/* </Button> */}\n                </NavLink>\n              ) : (\n                <NavLink\n                  onClick={logoutUser}\n                  className={classes.links}\n                  to=\"/Logout\"\n                >\n                  Logout\n                </NavLink>\n              )}\n            </div>\n          </Toolbar>\n        </AppBar>\n      ) : (\n        <Search />\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Carditem from \"./Carditem\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Moviemodal from \"./Moviemodal\";\n\nconst movie_api =\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\nexport default function Movie() {\n  let [movies, setMovies] = useState([]);\n\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n  useEffect(() => {\n    getMoviesData();\n  }, []);\n\n  const getMoviesData = async () => {\n    await fetch(movie_api)\n      .then((allMovies) => allMovies.json())\n      .then((json) => {\n        console.log(json.results);\n        movies = json.results;\n        setMovies(movies);\n      });\n  };\n\n  const styles = makeStyles({\n    toolbar: {\n      marginTop: \"8rem\",\n    },\n    cardcontent: {\n      backgroundColor: \"#818CF8\",\n      maxHeight: \"100vh\",\n    },\n    cardimg: {\n      minWidth: \"100%\",\n      minHeight: \"100%\",\n      maxWidth: \"150%\",\n      objectFit: \"fill\",\n    },\n    div: {\n      display: \"flex\",\n      margin: \"80px auto\",\n      maxHeight: \"60%\",\n      maxWidth: \"20%\",\n      display: \"block\",\n      boxShadow: \"0 0 2px 1px rgba(0, 0, 0, 0.5)\",\n    },\n    title: {\n      color: \"black\",\n    },\n    main: {\n      top: 0,\n      left: 0,\n      position: \"fixed\",\n      width: \"100%\",\n      height: \"100%\",\n      background: \"rgba(139, 150, 143, 0.5)\",\n    },\n    overview: {\n      fontSize: \"1rem\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n    gridContainer: {\n      padding: \"1rem 2rem\",\n    },\n  });\n  const classes = styles();\n\n  const selectMovie = (currentMovie) => {\n    setSelectedMovie(currentMovie);\n    // setFlag(true);\n  };\n\n  // const resetFlag = () => {\n  //   setSelectedMovie(null);\n  //   // setFlag(false);\n  // };\n\n  return (\n    <>\n      <div className={classes.toolbar}></div>\n      <Container>\n        <Grid container  spacing={4}>\n          {movies.map((item) => {\n            return (\n              <Grid\n                classname={classes.gridItem}\n                xs={6}\n                onClick={() => selectMovie(item)}\n                key={item.id}\n                sm={4}\n                lg={3}\n                item\n              >\n                <Carditem\n                  imgUrl={item.poster_path}\n                  movieTitle={item.title}\n                  movieRating={item.vote_average}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n        <div>\n          {selectedMovie && (\n            <Moviemodal\n              currentMovie={selectedMovie}\n              setSelectedMovie={setSelectedMovie}\n            />\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n{\n  /* <Card className={classes.main} onClick={resetFlag}>\n            <CardActionArea className={classes.div}>\n              <CardMedia\n                className={classes.cardimg}\n                component=\"img\"\n                height=\"200\"\n                alt=\"not render\"\n                image={\n                  selectedMovie.poster_path\n                    ? imagepath + selectedMovie.poster_path\n                    : \"https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n                }\n              />\n              <CardContent className={classes.cardcontent}>\n                <Typography className={classes.overview}>{selectedMovie.overview}</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card> */\n}\n","import React, { useRef, useState } from \"react\";\nimport Textfield from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Cardcontent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { useAuth } from \"../Contexts/Autcontext\";\nimport { toast } from \"material-react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport firebase from \"firebase/app\";\nimport { useHistory } from \"react-router-dom\";\n\ntoast.configure();\nconst styles = makeStyles({\n  textfield: {\n    margin: \"1rem\",\n    width: \"17rem\",\n  },\n  cardcontent: {\n    flexDirection: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    flexDirection: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\nexport default function Signup() {\n  const classes = styles();\n\n  const route = useHistory();\n  let emailRef = useRef(\"\");\n  let passwordRef = useRef(\"\");\n  let cnfPasswordRef = useRef(\"\");\n  const { signUp, currentUser } = useAuth();\n  const [error, setError] = useState();\n\n  const formSubmitHandler = async (e) => {\n    e.preventDefault();\n    if (passwordRef.current.value !== cnfPasswordRef.current.value) {\n      toast.error(\"Password does not match\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 1500,\n      });\n      cnfPasswordRef.current.value = \"\";\n      return;\n    }\n\n    try {\n      setError(\"\");\n      await signUp(emailRef.current.value, passwordRef.current.value);\n      toast.success(\"Account created successfully!!\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 1500,\n      }); \n      // console.log(currentUser)\n      route.push(\"/\");\n    } catch {\n      toast.error(\"Failed to sign in!!\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 1500,\n      });\n      // console.log(\"Failed to sign in\");\n      // emailRef.current.value = \"\";\n      // passwordRef.current.value = \"\";\n      // cnfPasswordRef.current.value = \"\";\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"sub-container\">\n        <Card className={classes.card} variant=\"outlined\">\n          <Cardcontent className={classes.cardcontent}>\n            \n            <form className={classes.form} onSubmit={formSubmitHandler}>\n              <Typography variant=\"h4\" className=\"title\">\n                Sign Up\n              </Typography>\n              {/* <input type=\"email\" ref={emailRef} placeholder=\"Enter email\"></input> */}\n              <Textfield\n                required\n                className={classes.textfield}\n                type=\"email\"\n                inputRef={emailRef}\n                placeholder=\"Enter email:\"\n                label=\"Email\"\n                variant=\"filled\"\n              ></Textfield>\n              <Textfield\n                required\n                inputRef={passwordRef}\n                className={classes.textfield}\n                type=\"password\"\n                placeholder=\"Enter password:\"\n                label=\"Password\"\n                variant=\"filled\"\n              ></Textfield>\n              <Textfield\n                required\n                inputRef={cnfPasswordRef}\n                className={classes.textfield}\n                type=\"password\"\n                placeholder=\"Re-enter password:\"\n                label=\"Confirm password\"\n                variant=\"filled\"\n              ></Textfield>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Sign up\n              </Button>\n            </form>\n\n            <Typography variant=\"body1\">\n              Already have an account?\n              <NavLink style={{ textDecoration: \"none\" }} to=\"/Signin\">\n                Sign in\n              </NavLink>\n            </Typography>\n          </Cardcontent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport Textfield from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport Cardcontent from \"@material-ui/core/CardContent\";\nimport { makeStyles, makestyles } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport { useAuth } from \"../Contexts/Autcontext\";\nimport { toast } from \"material-react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useHistory } from \"react-router-dom\";\n\ntoast.configure();\nconst styles = makeStyles({\n  textfield: {\n    margin: \"1rem\",\n    width: \"17rem\",\n  },\n  cardcontent: {\n    flexDirection: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  form: {\n    flexDirection: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\nexport default function Signin() {\n  const classes = styles();\n  const { signIn,currentUser } = useAuth();\n\n  let routeHistory = useHistory();\n\n  let emailRef = useRef();\n  let passwordRef = useRef();\n\n  const formSubmitHandler = async (e) => {\n    console.log(emailRef.current.value);\n    e.preventDefault();\n    try {\n      await signIn(emailRef.current.value, passwordRef.current.value);\n      toast.success(\"Signed in successful\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 1500,\n      });\n      routeHistory.push(\"/\");\n    } catch {\n      toast.error(\"Invalid email or password\", {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: 1500,\n      });\n      emailRef.current.value = \"\";\n      passwordRef.current.value = \"\";\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"sub-container\">\n        <Card className={classes.card} variant=\"outlined\">\n          <Cardcontent className={classes.cardcontent}>\n            <form className={classes.form} onSubmit={formSubmitHandler}>\n              <Typography variant=\"h4\" className=\"title\">\n                Sign In\n              </Typography>\n              <Textfield\n                inputRef={emailRef}\n                required\n                className={classes.textfield}\n                type=\"email\"\n                placeholder=\"Enter email:\"\n                label=\"Email\"\n                variant=\"filled\"\n              ></Textfield>\n              <Textfield\n                inputRef={passwordRef}\n                required\n                className={classes.textfield}\n                type=\"password\"\n                placeholder=\"Enter password:\"\n                label=\"Password\"\n                variant=\"filled\"\n              ></Textfield>\n              <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                Sign in\n              </Button>\n            </form>\n            <Typography variant=\"body1\">\n              Don't have an account?\n              <NavLink style={{ textDecoration: \"none\" }} to=\"/Signup\">\n                Sign up\n              </NavLink>\n            </Typography>\n          </Cardcontent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useAuth } from \"../Contexts/Autcontext\";\n\nconst MovieFirestore = (collection) => {\n  const { currentUser } = useAuth();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    firebase\n      .firestore()\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .collection(collection)\n      .onSnapshot((snap) => {\n        const documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setFavorites(documents);\n      });\n  }, [collection]);\n  return { favorites };\n};\n\nexport default MovieFirestore;\n","// import React from \"react\";\n// import MovieFirestore from \"./MovieFirestore\";\n\n// export default function Favorites() {\n//   const { favorites } = MovieFirestore(\"movies\");\n//   return <div>{console.log(favorites)}</div>;\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Carditem from \"./Carditem\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Moviemodal from \"./Moviemodal\";\nimport MovieFirestore from \"./MovieFirestore\";\n\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\nexport default function Movie() {\n  //   let [movies, setMovies] = useState([]);\n  const { favorites } = MovieFirestore(\"movies\");\n  //   const [selectedMovie, setSelectedMovie] = useState(null);\n\n  const styles = makeStyles({\n    toolbar: {\n      marginTop: \"8rem\",\n    },\n    cardcontent: {\n      backgroundColor: \"#818CF8\",\n      maxHeight: \"100vh\",\n    },\n    cardimg: {\n      minWidth: \"100%\",\n      minHeight: \"100%\",\n      maxWidth: \"150%\",\n      objectFit: \"fill\",\n    },\n    div: {\n      display: \"flex\",\n      margin: \"80px auto\",\n      maxHeight: \"60%\",\n      maxWidth: \"20%\",\n      display: \"block\",\n      boxShadow: \"0 0 2px 1px rgba(0, 0, 0, 0.5)\",\n    },\n    title: {\n      color: \"black\",\n    },\n    main: {\n      top: 0,\n      left: 0,\n      position: \"fixed\",\n      width: \"100%\",\n      height: \"100%\",\n      background: \"rgba(139, 150, 143, 0.5)\",\n    },\n    overview: {\n      fontSize: \"1rem\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n    gridContainer: {\n      padding: \"1rem 2rem\",\n    },\n  });\n  const classes = styles();\n\n  return (\n    <>\n      <div className={classes.toolbar}></div>\n      <Container>\n        <Grid container  spacing={4}>\n          {favorites.map((item) => {\n            return (\n              <Grid xs={6} key={item.id} sm={4} lg={3} item>\n                <Carditem\n                  imgUrl={item.image}\n                  movieTitle={item.title}\n                  movieRating={item.rating}\n                />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Search from \"./Components/Search\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Movie from \"./Components/Movie\";\nimport Signup from \"./Components/Signup\";\nimport Signin from \"./Components/Signin\";\nimport Authprovider from \"./Contexts/Autcontext\";\nimport Favorites from \"./Components/Favorites\";\n\nfunction App() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }} className=\"App\">\n      <Authprovider>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Movie />\n            </Route>\n            <Route exact path=\"/Search\">\n              <Search />\n            </Route>\n            <Route exact path=\"/Signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/Signin\">\n              <Signin />\n            </Route>\n            <Route exact path=\"/Favorites\">\n              <Favorites />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </Authprovider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}